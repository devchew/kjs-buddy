import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { PiCaretRightFill, PiFlagCheckeredFill, PiFlagFill } from 'react-icons/pi';
import { TimePicker } from './TimePicker.tsx';
import "./PanelDetails.css";
import { usePanelContext } from '../contexts/PanelContext.tsx';
import { useCardContext } from '../contexts/CardContext.tsx';
const IconInRedCircle = ({ children, className }) => (_jsx("div", { className: ["iconInRedCircle", className].join(' '), children: children }));
export const PanelDetails = () => {
    const { isEditMode } = useCardContext();
    const { actualStartTime, setActualStartTime, drivingTime, setDrivingTime, finishTime, setFinishTime, name, nextPKCTime, setNextPKCTime, number, provisionalStartTime, setProvisionalStartTime, resultTime, setResultTime } = usePanelContext();
    return (_jsxs("div", { className: "panelDetails", children: [!isEditMode && _jsx("span", { className: "panelDetails__name", children: name }), number > 1 && _jsxs("div", { className: "panelDetails__finish", children: [_jsx(IconInRedCircle, { className: "panelDetails__finish__icon", children: _jsx(PiFlagCheckeredFill, { fill: "#000" }) }), _jsx(TimePicker, { title: "Czas Mety", value: finishTime, precision: "miliseconds", onChange: setFinishTime })] }), _jsx("div", { className: "panelDetails__times", children: number > 1 ? _jsxs(_Fragment, { children: [_jsx(TimePicker, { title: "Prowizoryczny start", value: provisionalStartTime, onChange: setProvisionalStartTime, precision: "minutes" }), _jsx(PiCaretRightFill, { className: "panelDetails__times__arrow" }), _jsx(TimePicker, { title: "Faktyczny start", value: actualStartTime, onChange: setActualStartTime, precision: "minutes", style: "gray" }), _jsx(IconInRedCircle, { className: "panelDetails__times__icon", children: _jsx(PiFlagFill, { fill: "#000" }) }), _jsx(PiCaretRightFill, { className: "panelDetails__times__arrow" }), _jsx(TimePicker, { title: "Czas przejazdu", value: drivingTime, onChange: setDrivingTime, precision: "minutes" })] }) : _jsx(TimePicker, { title: "Prowizoryczny czas", value: provisionalStartTime, onChange: setProvisionalStartTime, precision: "minutes" }) }), _jsxs("div", { className: "panelDetails__results", children: [number > 1 && _jsxs(_Fragment, { children: [_jsx(IconInRedCircle, { className: "panelDetails__results__icon", children: "start" }), _jsx(TimePicker, { subtitle: "Wynik", value: resultTime, onChange: setResultTime, precision: "milisecondsWithoutHours" })] }), _jsx(TimePicker, { subtitle: `PKC${number}`, value: nextPKCTime, onChange: setNextPKCTime, precision: "minutes", style: "gray" })] })] }));
};
